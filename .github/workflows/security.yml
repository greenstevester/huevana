name: Security Scanning

on:
  push:
    branches: [ main, feat ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  codeql:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        queries: +security-and-quality

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build project
      run: mvn clean compile -DskipTests

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

  dependency-scan:
    name: Dependency Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Cache OWASP Database
      uses: actions/cache@v4
      with:
        path: ~/.owasp/dependency-check-data
        key: ${{ runner.os }}-owasp-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-owasp-

    - name: Run OWASP Dependency Check
      run: |
        mvn org.owasp:dependency-check-maven:check \

          -DfailBuildOnCVSS=7 \
          -DcveValidForHours=24 \
          -DsuppressionsLocation=.github/dependency-check-suppressions.xml

    - name: Upload SARIF results
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: target/dependency-check-report.sarif

    - name: Upload dependency check report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: dependency-scan-report
        path: |
          target/dependency-check-report.html
          target/dependency-check-report.json
        retention-days: 30

  secrets-scan:
    name: Secrets Detection
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Run Trivy secret scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-secrets.sarif'
        scanners: 'secret'

    - name: Upload Trivy scan results
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-secrets.sarif'

  license-check:
    name: License Compliance Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Check license compliance
      run: |
        mvn org.codehaus.mojo:license-maven-plugin:check-file-header \
          -Dlicense.header=.github/license-header.txt \
          -Dlicense.failOnMissingHeader=true

    - name: Generate license report
      run: |
        mvn org.codehaus.mojo:license-maven-plugin:aggregate-third-party-report

    - name: Upload license report
      uses: actions/upload-artifact@v4
      with:
        name: license-report
        path: target/site/aggregate-third-party-report.html
        retention-days: 30

  security-report:
    name: Security Report Summary
    runs-on: ubuntu-latest
    needs: [codeql, dependency-scan, secrets-scan, license-check]
    if: always()

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create security summary
      run: |
        echo "# Security Scan Summary" >> $GITHUB_STEP_SUMMARY
        echo "- CodeQL Analysis: ${{ needs.codeql.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Dependency Scan: ${{ needs.dependency-scan.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Secrets Scan: ${{ needs.secrets-scan.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- License Check: ${{ needs.license-check.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "View detailed reports in the artifacts section." >> $GITHUB_STEP_SUMMARY
